# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Deploy

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

concurrency:
  group: "build deploy"
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Set up JDK 21
        uses: actions/setup-java@3b6c050358614dd082e53cdbc55580431fc4e437
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'maven'

      - name: Install R
        uses: r-lib/actions/setup-r@12d8dd416fec5aaa60f2f54609b713b2ec031a94
        with:
          r-version: '4.4.2'

      - name: Install R packages
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::geepack

      - name: Build and test with Maven
        run: mvn -B package --file pom.xml

  build-pages:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy-pages:
    needs: build-pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  build-and-push-model-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository_owner }}/valipop
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build base
        run: |
          sudo apt-get update
          sudo apt-get -y install docker-compose
          docker-compose build base

      - name: Extract metadata (tags, labels) for ValiPop image
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push the ValiPop image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          file: docker/model/Dockerfile
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          ulimit: nofile=65536:65536

      - name: Generate artifact attestation for ValiPop image
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  build-and-push-search-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      LEADER_IMAGE_NAME: ${{ github.repository_owner }}/valipop-leader
      WORKER_IMAGE_NAME: ${{ github.repository_owner }}/valipop-worker
      SEARCH_IMAGE_NAME: ${{ github.repository_owner }}/valipop-search
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ValiPop base
        run: |
          sudo apt-get update
          sudo apt-get -y install docker-compose
          docker-compose build base

      - name: Extract metadata (tags, labels) for ValiPop leader image
        id: meta-leader
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.LEADER_IMAGE_NAME }}

      - name: Build and push the ValiPop leader image
        id: push-leader
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          file: docker/model/Dockerfile
          context: .
          push: true
          tags: ${{ steps.meta-leader.outputs.tags }}
          labels: ${{ steps.meta-leader.outputs.labels }}
          ulimit: nofile=65536:65536

      - name: Generate artifact attestation for ValiPop leader image
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.LEADER_IMAGE_NAME}}
          subject-digest: ${{ steps.push-leader.outputs.digest }}
          push-to-registry: true

      - name: Extract metadata (tags, labels) for ValiPop worker image
        id: meta-worker
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.WORKER_IMAGE_NAME }}

      - name: Build and push the ValiPop worker image
        id: push-worker
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          file: docker/model/Dockerfile
          context: .
          push: true
          tags: ${{ steps.meta-worker.outputs.tags }}
          labels: ${{ steps.meta-worker.outputs.labels }}
          ulimit: nofile=65536:65536

      - name: Generate artifact attestation for ValiPop worker image
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.WORKER_IMAGE_NAME}}
          subject-digest: ${{ steps.push-worker.outputs.digest }}
          push-to-registry: true

      - name: Extract metadata (tags, labels) for ValiPop search image
        id: meta-search
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.SEARCH_IMAGE_NAME }}

      - name: Build and push the ValiPop search image
        id: push-search
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          file: docker/model/Dockerfile
          context: .
          push: true
          tags: ${{ steps.meta-search.outputs.tags }}
          labels: ${{ steps.meta-search.outputs.labels }}
          ulimit: nofile=65536:65536

      - name: Generate artifact attestation for ValiPop search image
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.SEARCH_IMAGE_NAME}}
          subject-digest: ${{ steps.push-search.outputs.digest }}
          push-to-registry: true
