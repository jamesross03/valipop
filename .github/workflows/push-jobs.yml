name: Build and Test

on:
  push:
    branches: ['main']
  workflow_dispatch:

concurrency:
  group: "build deploy"
  cancel-in-progress: true

jobs:
  build-and-test-linux:
    name: Build and test (Linux)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out project
        uses: actions/checkout@v4.2.2

      - name: Build and run tests
        uses: ./.github/actions/build-and-test
        with:
          maven-target: 'package'
          maven-params: '-DexcludedGroups=slow'
          # Disabled while gedinline dependency is handled as a local jar.
          # upload-dependencies: 'true'

  build-and-test-windows:
    name: Build and test (Windows)
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - name: Check out project
        uses: actions/checkout@v4.2.2

      - name: Build and run tests
        uses: ./.github/actions/build-and-test
        with:
          maven-target: 'test'
          maven-params: '-DexcludedGroups=slow'

  build-and-test-macos:
    name: Build and test (macOS)
    runs-on: macos-latest
    permissions:
      contents: read
    steps:
      - name: Check out project
        uses: actions/checkout@v4.2.2

      - name: Build and run tests
        uses: ./.github/actions/build-and-test
        with:
          maven-target: 'test'
          maven-params: '-DexcludedGroups=slow'

  build-pages:
    name: Build website
    needs: build-and-test-linux
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Setup Pages
        uses: actions/configure-pages@v5.0.0

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1.0.13
        with:
          source: ./docs
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1

  deploy-pages:
    name: Deploy website
    needs: build-pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5

  build-and-push-model-image:
    name: Build Docker image (model)
    needs: build-and-test-linux
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository_owner }}/valipop
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Log in to the Container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build base
        run: |
          sudo apt-get update
          sudo apt-get -y install docker-compose
          docker-compose build base

      - name: Extract metadata (tags, labels) for ValiPop image
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push the ValiPop image
        id: push
        uses: docker/build-push-action@v6.18.0
        with:
          file: docker/model/Dockerfile
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          ulimit: nofile=65536:65536

      - name: Generate artifact attestation for ValiPop image
        uses: actions/attest-build-provenance@v2.4.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  build-and-push-search-images:
    name: Build Docker image (parameter search)
    needs: build-and-test-linux
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      LEADER_IMAGE_NAME: ${{ github.repository_owner }}/valipop-leader
      WORKER_IMAGE_NAME: ${{ github.repository_owner }}/valipop-worker
      SEARCH_IMAGE_NAME: ${{ github.repository_owner }}/valipop-search
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Log in to the Container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ValiPop base
        run: |
          sudo apt-get update
          sudo apt-get -y install docker-compose
          docker-compose build base

      - name: Extract metadata (tags, labels) for ValiPop leader image
        id: meta-leader
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.LEADER_IMAGE_NAME }}

      - name: Build and push the ValiPop leader image
        id: push-leader
        uses: docker/build-push-action@v6.18.0
        with:
          file: docker/model/Dockerfile
          context: .
          push: true
          tags: ${{ steps.meta-leader.outputs.tags }}
          labels: ${{ steps.meta-leader.outputs.labels }}
          ulimit: nofile=65536:65536

      - name: Generate artifact attestation for ValiPop leader image
        uses: actions/attest-build-provenance@v2.4.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.LEADER_IMAGE_NAME}}
          subject-digest: ${{ steps.push-leader.outputs.digest }}
          push-to-registry: true

      - name: Extract metadata (tags, labels) for ValiPop worker image
        id: meta-worker
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.WORKER_IMAGE_NAME }}

      - name: Build and push the ValiPop worker image
        id: push-worker
        uses: docker/build-push-action@v6.18.0
        with:
          file: docker/model/Dockerfile
          context: .
          push: true
          tags: ${{ steps.meta-worker.outputs.tags }}
          labels: ${{ steps.meta-worker.outputs.labels }}
          ulimit: nofile=65536:65536

      - name: Generate artifact attestation for ValiPop worker image
        uses: actions/attest-build-provenance@v2.4.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.WORKER_IMAGE_NAME}}
          subject-digest: ${{ steps.push-worker.outputs.digest }}
          push-to-registry: true

      - name: Extract metadata (tags, labels) for ValiPop search image
        id: meta-search
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.SEARCH_IMAGE_NAME }}

      - name: Build and push the ValiPop search image
        id: push-search
        uses: docker/build-push-action@v6.18.0
        with:
          file: docker/model/Dockerfile
          context: .
          push: true
          tags: ${{ steps.meta-search.outputs.tags }}
          labels: ${{ steps.meta-search.outputs.labels }}
          ulimit: nofile=65536:65536

      - name: Generate artifact attestation for ValiPop search image
        uses: actions/attest-build-provenance@v2.4.0
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.SEARCH_IMAGE_NAME}}
          subject-digest: ${{ steps.push-search.outputs.digest }}
          push-to-registry: true
