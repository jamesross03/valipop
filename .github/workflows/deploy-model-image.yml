#name: Publish ValiPop model image
#
## Configures this workflow to run every time a change is pushed to the branch called `main`.
#on:
#  push:
#    branches: ['main']
#  pull_request:
#    branches: ['main']
#
#env:
#  REGISTRY: ghcr.io
#  IMAGE_NAME: ${{ github.repository_owner }}/valipop
#
## There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
#jobs:
#  build-and-push-model-image:
#    runs-on: ubuntu-latest
#    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
#    permissions:
#      contents: read
#      packages: write
#      attestations: write
#      id-token: write
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
#      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
#      - name: Log in to the Container registry
#        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Build base
#        run: |
#            sudo apt-get update
#            sudo apt-get -y install docker-compose
#            docker-compose build base
#
#      # Generate metadata for the main ValiPop image
#      - name: Extract metadata (tags, labels) for ValiPop image
#        id: meta
#        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#
#      # Builds and pushes the main ValiPop image
#      - name: Build and push the ValiPop image
#        id: push
#        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
#        with:
#          file: docker/model/Dockerfile
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          ulimit: nofile=65536:65536
#
#      # Generates artifact attestation for the main ValiPop image
#      - name: Generate artifact attestation for ValiPop image
#        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2
#        with:
#          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: true
